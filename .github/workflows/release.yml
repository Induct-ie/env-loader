name: Release

on:
  push:
    tags:
      - 'v*'

env:
  BIN_NAME: environment-loader

jobs:
  build:
    name: Build and Release Binaries (glibc)
    runs-on: ubuntu-latest
    permissions:
      # Enable writing to a github release
      contents: write
      packages: write
      id-token: write

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        include:
          - target: x86_64-unknown-linux-gnu
            arch: x86_64
            linker: gcc
            packages: []
          - target: aarch64-unknown-linux-gnu
            arch: arm64
            linker: aarch64-linux-gnu-gcc
            packages: [gcc-aarch64-linux-gnu]

    steps:
      - uses: actions/checkout@v4

      - name: Install required packages
        if: ${{ matrix.packages }}
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ join(matrix.packages, ' ') }}

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Install cross
        run: |
          curl -LsSf https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-gnu.tgz | \
            tar -xz -C ~/.cargo/bin
          cargo binstall --no-confirm cross

      - name: Build release binary
        run: cross build --release --target ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ env.BIN_NAME }} dist/${{ env.BIN_NAME }}-${{ matrix.arch }}
          chmod +x dist/${{ env.BIN_NAME }}-${{ matrix.arch }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/${{ env.BIN_NAME }}-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
